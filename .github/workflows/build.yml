name: Build Arch WSL Image

on:
    schedule:
        - cron: "0 0 1 * *" # 毎月1日の00:00に実行
    workflow_dispatch: # 手動実行も可能

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set current date and time
              id: datetime
              run: echo "datetime=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  load: true
                  tags: arch-wsl:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Export and compress Docker image
              run: |
                  container_id=$(docker create arch-wsl:latest)
                  docker export $container_id | gzip > arch-wsl.tar.gz
                  docker rm $container_id
                  echo "TAR_SIZE=$(du -h arch-wsl.tar.gz | cut -f1)" >> $GITHUB_ENV

            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v2
              with:
                  files: arch-wsl.tar.gz
                  name: ArchLinux WSL Image ${{ steps.datetime.outputs.datetime }}
                  tag_name: arch-wsl-${{ steps.datetime.outputs.datetime }}
                  body: |
                      # ArchLinux WSL Image ${{ steps.datetime.outputs.datetime }}

                      ファイルサイズ: ${{ env.TAR_SIZE }}

                      ## インストール方法
                      1. PowerShellでWSLにインポート:
                      ```powershell
                      wsl --import ArchWSL C:\path\to\store C:\path\to\arch-wsl.tar.gz
                      ```

                      2. 新しいディストリビューションを起動:
                      ```powershell
                      wsl -d ArchWSL
                      ```
                  draft: false
                  prerelease: false
